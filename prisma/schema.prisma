// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// City model

model city {
  id      String    @id @default(uuid())
  name    String    @db.VarChar(64)
  user    user[]
  theatre theatre[]
}

// user model

model user {
  id            String    @id @default(uuid())
  name          String    @db.VarChar(128)
  email         String    @db.VarChar(64)
  phoneNumber   String    @db.VarChar(32)
  loggedInAtUTC DateTime? @default(now())
  city          city      @relation(fields: [cityId], references: [id])
  cityId        String
  booking       booking[]
  account       account[]
}

// account model

model account {
  id       String @id @default(uuid())
  username String @unique @db.VarChar(128)
  password String @db.VarChar(256)
  user     user   @relation(fields: [userId], references: [id])
  userId   String
}

//theatre model

model theatre {
  id              String   @id @default(uuid())
  name            String   @db.VarChar(64)
  numberOfScreens Int
  city            city     @relation(fields: [cityId], references: [id])
  cityId          String
  screen          screen[]
}

//screen model

model screen {
  id           String  @id @default(uuid())
  screenNumber Int
  theatre      theatre @relation(fields: [theatreId], references: [id])
  theatreId    String
  seat         seat[]
  show         show[]
}

//seat model

model seat {
  id         String       @id @default(uuid())
  seatNumber Int
  screen     screen       @relation(fields: [screenId], references: [id])
  screenId   String
  bookedSeat bookedSeat[]
}

//movie model

model movie {
  id            String @id @default(uuid())
  name          String @db.VarChar(128)
  durationInMin Int
  language      String @db.VarChar(32)
  show          show[]
}

//show model

model show {
  id                 String       @id @default(uuid())
  screen             screen       @relation(fields: [screenId], references: [id])
  screenId           String
  movie              movie        @relation(fields: [movieId], references: [id])
  movieId            String
  bookedSeat         bookedSeat[]
  booking            booking[]
  showStartTimeInUtc DateTime
  showEndTimeInUtc   DateTime
  availableUntilUtc  DateTime?
}

//booking model

model booking {
  id                  String       @id @default(uuid())
  user                user         @relation(fields: [userId], references: [id])
  userId              String
  show                show         @relation(fields: [showId], references: [id])
  showId              String
  numberOfSeatsBooked Int
  showDate            DateTime
  bookedSeat          bookedSeat[]
}

//bookedseat model

model bookedSeat {
  id        String  @id @default(uuid())
  seat      seat    @relation(fields: [seatId], references: [id])
  seatId    String
  show      show    @relation(fields: [showId], references: [id])
  showId    String
  booking   booking @relation(fields: [bookingId], references: [id])
  bookingId String
}
